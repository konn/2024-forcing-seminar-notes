@import: preamble
@import: ../common/enum-utils

let forcing-with-posets = '<
+section?:(`chap:posets`){稠密埋め込みと擬順序による強制法}<
    +p{
      前節までは、主に完備Boole代数による強制法を考えてきた。実用上はより一般の擬順序による強制法が使われることが多い。本節では、完備Boole代数による強制法理論から擬順序による定式化を導出する。
    }

    +notation<
      +p{
        以下、特に断わらない限り、${\mathbb{P}, \mathbb{Q}, \mathbb{R}, \ldots}などの${P}以降の黒板太字は（Boole代数かもしれない）擬順序を、${\mathbb{B}, \mathbb{C}, \mathbb{D}}などはBoole代数を表すものとする。
      }
    >

    +p{無限組合せ論パートで、任意の擬順序${\P}についてその\emph{Boole完備化}${\B(\P)}が同型を除いて一意に存在することは既に見た。関連する定義は本節でも使うので復習しておこう：}

    +defn< +p{
      \listing{
        * ${d: \P \to \Q}が\emph{稠密埋め込み}（\emph{dense embedding}、記号：${d: \P \dense-to \Q}）${\defs}
          \enumerate{
            * ${p(\mathbb{1}_\P) = \mathbb{1}_\Q},
            * 単調性：${p \leq_\P q \implies d(p) \leq_\Q d(q)},
            * ${\incompat}-準同型：${p \incompat_\P q \implies d(p) \incompat_\Q d(q)},
            * ${d[\P^+]}は${\Q}で稠密。
          }
        * 擬順序${\P}の\emph{Boole完備化}（\emph{Boolean completion}）${\B(\P)}とは、稠密埋め込み${d: \P \dense-to \B(\P)}が存在するような完備Boole代数${\B(\P)}のことである。
      }
    }
  >
  +lemma<+p{擬順序${\P}のBoole完備化${\B(\P)}は常に存在し、同型を除いて一意である。}>

  +p{
    我々が完備Boole代数によるBoole値モデルを経由する形で強制法を定式化したのは、このBoole完備化が常に存在し\footnote{基礎モデルで選択公理が成り立たない場合に強制法をしたい場合上の命題が常に存在するとは限らないが、その場合も強制法関係${\vdash}の定義から出発すれば問題ない。}、更に\emph{強制法が稠密埋め込みで不変}だからである。本節では、このことを詳しく説明していく。
  }
  +p{
    さて、Boole値モデルでは最初に真偽値${\pSQ{\varphi} \in \B}を定義し、その上で強制関係を${p \forces \varphi \iff p \leq \pSQ{\varphi}}として定義していた。
    この定義から出発して、Boole演算を使わずに擬順序だけで強制関係${p \forces \varphi}を特徴づけたものが、次のDefinability Lemma（\ref(`lem:definability`);）である：
  }

  +theorem?:(`lem:definability`)?:({Definability Lemma})<
    +p{
      \enumerate{
        * ${p \forces \dot{x} \in \dot{y} \iff \Set{q \in \mathbb{P}}{ \exists (\dot{z}, b) \in \dot{y} \mhquad[q \leq b \land q \forces \dot{z} = \dot{x}]}}が${p}以下で稠密。
        * ${p \forces \dot{x} = \dot{y} \iff \forall \dot{z} \in \dom(\dot{x}) \cup \dom(\dot{y})\forall q \leq p \mhquad \pB{\p{q \forces \dot{z} \in \dot{x}} \liff \p{q \forces \dot{z} \in \dot{y}}}}。
        * ${p \forces \dot{x} \in \check{V} \iff \Set{q}{\exists z \in V \mhquad \p{q \forces \dot{x} = \check{z}}}}が${p}以下で稠密。
        * ${p \forces \lnot \varphi \iff \forall q \leq p \mhquad q \nforces \varphi}
        * ${p \forces \varphi \lor \psi \iff \Set{q}{\p{q \forces \varphi} \lor \p{q \forces \psi}}}が${p}以下で稠密。
        * ${p \forces \varphi \land \psi \iff p \forces \varphi} かつ ${p \forces \psi}。
        * ${p \forces \varphi \to \psi \iff \nexists q \leq p \mhquad \pB{\p{q \forces \varphi} \land \p{q \forces \lnot\psi}}}。
        * ${p \forces \exists x \varphi(x) \iff \Set{q}{\exists \dot{x} \mhquad \p{q \forces \varphi(\dot{x})}}}が${p}以下で稠密。
      }
    }
  >
  +proof<
    +p{\emph{TODO}: ${\in}と${\exists}だけ証明する}
  >
  +exercise<+p{Definability Lemmaの残りの節を埋め、証明を完成させよ。}>
  +p{
    上は全て同値関係であるので、${\forces}をそもそもDefinability Lemmaの各節で定義してしまえば、上の補題は逆に${p \forces \varphi \iff p \leq \pSQ{\varphi}}の証明だと思うことができる。この${\forces}の定義はBoole代数はおろか一般の擬順序でも通用する定義になっているので、以降本セミナーでは上のDefinability Lemmaこそが強制関係${\forces}の定義だと考えることにする。
  }
  +defn<
    +p{擬順序${\P}上の強制関係${p \forces \varphi}を、Definability Lemma（\ref(`lem:definability`);）の各節により定義する。}
  >
  +p{Definability Lemmaによる強制関係の定義から、以下が直ちに従う：}
  +cor?:(`cor:forces-deriv`)< +p{
    \enumerate{
      * ${p \forces \varphi \iff \forall q \leq p \mhquad \p{q \forces \varphi}}
      * ${p \forces \varphi \to \psi \iff \forall q \leq p \mhquad \pB{\p{q \forces \varphi} \to \exists r \leq q \mhquad \p{q \forces \psi}}}
      * ${p \forces \exists x \in \check{A} \mhquad \varphi(x) \iff \Set{q}{\exists a \in A \mhquad \p{q \forces \varphi(\check{a})}}}が${p}以下で稠密。
      * ${p \forces \varphi \iff \Set{r \leq p}{r \forces \varphi}: \text!{dense below ${p}}}
      * ${p \nforces \varphi \iff \exists r \leq p \mhquad r \forces \lnot \varphi}}
  }>
  +exercise<+p{証明を完成させよ。}>
  +p{
    以下の目標は、\emph{強制法の稠密埋め込みによる不変性}を示すことである。特に、この定義による擬順序の強制法を考えたとき、稠密埋め込みによって生成的フィルターの間に一対一の対応関係がつき、名称を適切に読み替えることで命題の真偽も保たれる、ということを示していく。これが示されてしまえば、Boole値モデルについて示した健全性定理や強制法定理などの種々の性質が、擬順序による強制法でも自動的に成り立つことがわかる。
  }

  +p{以下では種々の擬順序や完備Boole代数の間の埋め込みについて議論をする。その上で稠密埋め込みと並んで重要な役割を果すのが\emph{完備埋め込み}である。}

  +defn<
    +p{
      ${f: \mathbb{P} \to \mathbb{Q}}が\emph{完備埋め込み}（\emph{complete embedding}、記号：${f: \mathbb{P} \comp-to \mathbb{Q}}）${\defs}
        \enumerate{
          * ${p(\mathbb{1}_\P) = \mathbb{1}_\Q},
          * 単調性：${p \leq_\P q \implies f(p) \leq_\Q f(q)},
          * ${\mathcal{A}}が${\P}の極大反鎖なら、${f[\mathcal{A}]}も${\Q}で極大反鎖である。
          }
    }
  >
  +exercise?:(`exc:dense-is-comp`)<+p{稠密埋め込みは完備埋め込みである。}>

  +remark<
    +p{
      ${f: \P \to \B}で${\B}がBoole代数のとき、完備埋め込みおよび稠密埋め込みは、暗に${f[\mathbb{P}^+] \subseteq \B^+}を要請していることに注意する。これは、完備埋め込みの場合は「反鎖」を${\P^+}の部分集合として定義しているからであり、稠密埋め込みは稠密集合が${\Q^+}の部分集合として定義しているからである。
    }
    +p{
      こういったことを一々気にするのは面倒くさい。Boole代数でないような擬順序で強制法を使う場合、考える擬順序はほとんどすべての例で最小限を持たないものである。そこで、以下では断わらない限り擬順序は最小限を持たない、${\P = \P^+}となるようなものであると思って扱うことにする。この立場に立っても、証明を微妙に変えてやれば最小限を持つような擬順序にも対応できる。あるいはあらかじめなくなるまで最小限を取り除いてやってから適用している、と思ってもよい。
    }
  >
  +p{
    稠密埋め込みの定義は${\P, \Q}に関して${\Delta_0}-論理式で書けるので、「${f: \P \to \Q}が稠密埋め込みである」という概念は強制拡大の前後で不変である。
    一方、完備埋め込みは上の定義が直感的でわかりやすいが、${\P, \Q}に関する${\Delta_1}-論理式で書けるかは直ちにはわからず、強制拡大の前後で性質が変わらないか不安に思うかもしれない。しかし、次の特徴付けが知られており、これは明らかに${\P, \Q}に関して${\Delta_0}である：
  }
  +lemma<
    +p{${f: \P \to \Q}について次は同値：}
    +enumerate{
      * ${f}は完備埋め込み
      * ${f}は以下を満たす：
        \enumerate{
          * ${\mathbb{1}}の保存：${f(\mathbb{1}_\P) = \mathbb{1}_\Q},
          * 単調性：${p \leq_\P q \implies f(p) \leq_\Q f(q)},
          * ${\incompat}-準同型：${p \incompat_\P q \implies f(p) \incompat_\Q f(q)},
          * 任意の${q \in \mathbb{Q}}に対し、${f}による${q}の${\P}への\emph{簡約}（\emph{reduction}）${q* \in \P}が存在し、次を満たす：
          
            \eqn-notag(${\forall p \in \P\mhquad \pB{f(p) \incompat_\Q q \to p \incompat q^*}});
        }
    }
  >
  +exercise< +p{上の補題を示せ。} >
  +p{
    より一般的に、完備埋め込み${f: \P \to  \Q}の存在は、実は「${\Q}による強制法で${\P}の生成的フィルターも付加される」という形で特徴づけることができ、稠密の場合この対応が同型になるのである。
  }
  +defn<
    +p{
      ${e: \P \comp-to \Q}を完備埋め込みとする。
    }
    +enumerate{
      * ${\dot{x} \in V^\P}に対して、${e_\ast(\dot{x}) \in V^\Q}を以下のように${\mathbb{B}}-階数に関する帰納法で定義する：
        \eqn-notag(${
          e_\ast(\dot{x}) \defeq \Set{ (e_\ast(\dot{y}), e(p)) }{ (\dot{y}, p) \in \dot{x}}
        });
      * ${F \subseteq \P}を${\P}のフィルターとするとき、${\tilde{e}(F) \subseteq \Q}を以下で定める：
        \eqn-notag(${\tilde{e}(F) \defeq \Set{ q \in \Q }{ \exists p \in F \mhquad \p{e(p) \leq_\Q q} } });
        つまり、${\tilde{e}(F)}は${e[F]}が${\Q}で生成するフィルターである。
    }
  >

  +lemma<
    +p{
      ${e: \P \to \Q}が完備埋め込みとする時、次が成立：
      \enumerate{
        * ${V^{\Q} \models e^{-1}[\dot{G}_{\Q}]: (V, \P)\text!{-generic}}
        * ${\sigma \in V^\P}に対して、${V^\Q \models \check{e_\ast}(\check{\sigma})_{\mscript{\dot{G}}_\Q} = \check{\sigma}_{e^{-1}[\dot{\mscript{G}}_\Q]}}が成り立つ。
      }
    }
  >
  +proof<
    +p{${(1)}: 完備埋め込みが極大反鎖を保つことから直ちに従う。}
    +p{${(2)}: ${\B}-階数に関する帰納法で示せる。}
  >
  +p{実は、擬順序が\emph{分離的}という条件を満たすとき、上の逆も成り立つことがわかる。そのことを見るために、暫く分離的擬順序と付随する順序関係について議論する。}
  +defn<
    +p{擬順序${\P}が\emph{分離的}（\emph{separative}）${\defs \forall p, q \in \P \mhquad \pB{p \leq q \iff \forall r \leq p \mhquad \p{r \compat q}}}。}
  >
  +exercise<+p{Boole代数は分離的であることを示せ。}>
  +notation<
    +p{一般の擬順序について、このセミナーでは以後${p \unlhd q \defs \forall r \leq p \mhquad \p{r \compat q}}と書くことにする。}
  >
  +exercise<+p{一般の擬順序${\P}において、${\unlhd}は${\leq}を拡張する（つまり${x \leq y \implies x \unlhd y}となるような）${\P}上の擬順序となることを示せ。}>
  +p{強制法から見た上の定義の嬉しさは次の補題が明らかにしてくれる：}
  +lemma?:(`lem:insep-char`)<+p{${p, q \in \P}とするとき、次は同値：
    \enumerate{ 
      * ${p \forces \pB{\check{q} \in \dot{G}}}
      * ${\forall r \leq p \mhquad \p{r \compat q}}
    }
  }>
  +exercise<+p{上を示せ。定義に従って計算すれば従う。}>

  +p{つまり、分離的な擬順序というのは、「生成的フィルター${G}によって分離できない」という二項関係${\unlhd}が元々の擬順序${\leq}と完全に一致するような擬順序であったという訳だ。}
  +p{実のところ、こと強制関係においては${\leq}と${\unlhd}には殆んど差がない、というのが次の補題である（\ref(`cor:forces-deriv`);の${(1)}と比較せよ）：}

  +lemma?:(`lem:forces-insep`)<
    +p{${p \forces \varphi \iff \forall q \unlhd p \pB{q \forces \varphi}}}
  >
  +proof<
    +p{
      ${p \unlhd p}なので${(\Longleftarrow)}は明らか。${(\implies)}を示す。
      }
    +p{
      ${q \unlhd p}を取る。\ref(`cor:forces-deriv`);の${(4)}より、${q}以下で${r \forces \varphi}となる${r}が稠密に存在すればよい。
      特に、議論としては同じなので${r \leq q}で${r \forces \varphi}となるものを見付ければ十分である（稠密性論法）。
      ${q \unlhd p}より${r \leq q, p}が取れる。すると\ref(`cor:forces-deriv`);の${(1)}から${r \forces \varphi}となるので、これが求めるものである。
    }
  >

  +p{更に、上の補題から真理補題（\ref(`lem:truth-lemma`);）の擬順序版が従う：}

  +lemma?:(`lem:poset-truth-lemma`)?:({真理補題・擬順序版})<
    +p{${p \forces \varphi}なら、${\mathbb{1} \forces \pB{\check{p} \in \dot{G} \to \varphi}}}
  >
  +proof<
    +p{
      \ref(`cor:forces-deriv`);の${(2)}から、${q \forces \check{p} \in \dot{G}}なる${q}に対し、${r \leq q}で${r \forces \varphi}となるものを見付ければよい。
      しかし、\ref(`lem:insep-char`);より${q \unlhd p}なので、\ref(`lem:forces-insep`);より特に${q \forces \varphi}となるので明らか。
    }
  >


  +p{}
  +lemma<
    +p{
      ${\Q}が分離的擬順序で写像${e: \P \to \Q}が次を満たすとする：
      \eqn-notag(${V^{\Q} \models e^{-1}[\dot{G}_{\Q}]: (V, \P)\text!{-generic filter}});
      このとき、${e}は完備埋め込みである。
    }
  >
  +proof<
    +p{単調性を示す。${p \leq_\P q}とすると、${V^{\Q} \models \pB{p \in e^{-1}[\dot{G}_\Q] \to q \in e^{-1}[\dot{G}_\Q]}}が成り立ち、特に定義より${V^{\Q} \models \pB{e(p) \in \dot{G}_\Q \to e(q) \in \dot{G}_\Q}}となる。
      よって、${\Q}の分離性と\ref(`lem:insep-char`);より${e(p) \leq e(q)}を得る。
    }
    +p{${e(\mathbb{1}) \in \dot{G}_\Q}より${\mathbb{1}}上の議論と同様に${\forall q \mhquad q \leq e(\mathbb{1})}が言え、${e(\mathbb{1}_{\mathbb{P}}) = \mathbb{1}_\Q}が常に成り立つ。}
    +p{
      一旦${\bot}を保つことも見ておく。対偶を示す：${e(p) \compat e(q)}ならば${p \compat q}であることを示す。${e(p) \compat e(q)}なので、${r \leq_\Q e(p), e(q)}となる${r \in \Q}をとっておく。すると、${r \forces e(p), e(q) \in \dot{G}_\Q}であり、定義より${r \forces p, q \in e^{-1}[\dot{G}_\Q]}となる。このとき、${\forces e^{-1}[\dot{G}_\Q]: \text!{filter}}であるので、${r \forces p \compat q}でなくてはならない。${r \compat q}は${V}に属する元である${\P, p, q, \leq}を使って${\Delta_0}-論理式で書けるので、結局${V}で見ても${p \compat q}が成り立つ。
    }
    +p{
      以上から${e}は反鎖を反鎖に移すことがわかったので、極大性が保たれることを言えばよい。
      ${\mathcal{A}}を${\mathbb{P}}の極大反鎖とし、${q \in \Q}を適当にとり、${r \in e[\mathcal{A}]}で${r \compat q}となるものがとれればよい。
      
      いま仮定から${q \forces \mathcal{A} \cap e^{-1}[\dot{G}_\Q] \neq \emptyset}であり、これは定義より${q \forces \exists r \in \check{e[\mathcal{A}]} \mhquad \pB{ r \in \dot{G}_\Q}}と同値である。すると、\ref(`cor:forces-deriv`);から${s \leq q}と${r \in e[\mathcal{A}]}で${s \forces \check{r} \in \dot{G}_\Q}を満たすものが取れる。
      このとき${s \forces \check{r}, \check{q} \in \dot{G}_\Q}より特に${s \forces \check{r} \compat \check{q}}となり、${\Delta_0}絶対性より${V}で見ても${r \compat q}が成り立つ。
    }
  >
  +remark<+p{ここでみたように、「存在するなら、その下に証拠とそれを強制する条件が取れるから〜」という形の議論を、\emph{稠密性論法}（\emph{density argument}）と呼ぶ。「稠密性から取り直せるので、最初から${\mathbb{1}}で強制できていると思って議論しちゃうよ」みたいなものが典型例である。}>

  +p{更に、上では${e}を個別に固定したが、${\Q}に関する条件を更に強くすれば、単純に「${\Q}が${\P}の${(V, \P)}-生成的フィルターを付加する」という条件と「完備埋め込みがなんでもいいから存在する」は同値になる：}

  +lemma<
    +p{
      ${\P}が擬順序、${\B}が完備Boole代数のとき、次は同値：
      \enumerate{
        * ${\P}から${\B}への完備埋め込みが存在する
        * ${V^{\B} \models \exists \dot{H}: \text!{${(V, \mathbb{P})}-generic}}
      }
    }
  >
  +proof<
    +p{${(1) \implies (2)}はすでに見たので、${(2) \implies (1)}を示す。結論から言うと、次の写像が求めるものである：}
    +eqn-notag(${
      e(p) \defeq \pSQ{\check{p} \in \dot{H}}
    });
    +p{
      めちゃくちゃ素直な定義である。単調性や${\mathbb{1}}を保つことは自明である。${\bot}を保つこともこれまでと同様に（というか${\B}がBoole代数なのでもっと簡単に）示せる。
    }
    +p{
      あとは${\mathcal{A}}を${\P}の極大反鎖として${e[\mathcal{A}]}が${\B}でも極大であることが言えればよい。特に、${e[\mathcal{A}]}が前稠密であるということが示せればよいが、今${\B}は完備Boole代数なので${\sum e[\mathcal{A}] = \mathbb{1}}が示せればよい。しかるに：
      \alignat?:(AZMathEquation.notag)(2)(${
      | \sum e[\mathcal{A}]
        | = \sum_{a \in \mathcal{A}} e(a) = \sum_{a \in \mathcal{A}} \pSQ{\check{a} \in \dot{H}}
        | \mqquad | (\text!{定義})
      | | = \pSQ{\exists a \in \check{\mathcal{A}} \mhquad \check{a} \in \dot{H}}
        | | (\text!{\ref(`cor:V-qfer`); (2)})
      | | = \pSQ{\check{\mathcal{A}} \cap \dot{H} \neq \emptyset} = \mathbb{1}
        | | (\text!{${\dot{H}}: ${(V, \P)}-生成的、${\mathcal{A}}: 極大反鎖より})
      | });
      よって示せた。
    }
  >
  +remark< +p{
    擬順序${\P}と${V^{\mathbb{P}} \models \pB{\dot{\Q}: \text!{擬順序}}}となるような擬順序の${\P}-名称${\dot{\Q}}が与えられたときに、「${\P}の後に今度は${\dot{\Q}}で強制拡大する」という操作を一つにまとめた（${V}での）\emph{二段階反復擬順序}${\P \ast \dot{Q}}が定義できる。
    実は、${\P}から${\Q}に完備埋め込みが存在するとき、\emph{商の${\P}-名称}${(\Q : \P)}を定義することができる。これは${V^{\P}}の中で「${\check{\Q}}のうち${V^{\Q}}にいくのに足りない分」になるような名前である。より詳しく、${\Q}から${\P \ast (\Q : \P)}への稠密埋め込みが存在し、特に両者は強制法として同値になる、ということが示せる。このように、完備埋め込みの存在は、「一方の強制法が他方の強制法の途中に現れる」という状況を特徴づけるとても良い概念であることがわかる。
  }>
  +p{さて、これまで完備埋め込みの性質を見てきたが、これは先の宣言通り、稠密埋め込みが強制法を保つことを示すためである：}
  +defn<
    +p{
      ${d: \P \dense-to \Q}が稠密埋め込み、${\dot{x} \in V^\Q}とするとき、${d^\ast(\dot{x}) \in V^\P}を以下のように${\mathbb{B}}-階数に関する帰納法で定義する：
      \eqn-notag(${
        d^\ast(\dot{x}) \defeq \Set{ (d^\ast(\dot{y}), q) }{ (\dot{y}, q) \in \dot{x}, d(p) \leq_\Q q}
      });
    
    }
  >
  +theorem(
    open EnumitemAlias in open EnumUtils in
    let ctr = new-series () in '<
    +p{${d: \P \dense-to \Q}を稠密埋め込みとする。}
    +enum-with(ctr){
      * ${V^{\mathbb{P}}}において次が成立： ${H \defeq \tilde{d}(G_\P)}は${(V, \Q)}-生成的フィルターで、${G_\P = d^{-1}[H]}。
      * ${V^{\mathbb{Q}}}において次が成立： ${H \defeq d^{-1}[G_\Q]}は${(V, \P)}-生成的フィルターで、かつ${G_\Q = \tilde{d}(H)}。
    }
    +pn{
      以上で${G_\P \mapsto \tilde{e}(G_\P), G_\Q \mapsto e^{-1}[G_\Q]}はある意味で逆演算であることがわかった。そこで、この対応を念頭に、この定理では以下${\dot{G}_\P, \dot{G}_\Q}は共に${\P}-名称としても${\Q}-名称としても用いることにする。たとえば、${\P}-名称としての${G_\P}は普通の標準的名称であり、${\P}-名称としての${\dot{G}_\Q}は${\tilde{d}(G_\P)}を指す${\P}-名称とする。逆に${\dot{G}_\P}を${\Q}-名称として用いたとき、これは${d^{-1}[G_\Q]}の名称を指すものとする。
    }
    +enum-with(ctr){
      * ${\sigma \in V^\P, \tau \in V^\Q}について、${V^\P \models \check{\tau}_{\dot{\mscript{G}}_\Q} = d^\ast(\check{\tau})_{\dot{\mscript{G}}_\P}}かつ
      ${V^\Q \models \check{\sigma}_{\dot{\mscript{G}}_\P} = d_\ast(\check{\sigma})_{\dot{\mscript{G}}_\P}}
      * ${\sigma \in V^\P, \tau \in V^\Q}について、${V^\P \models d^\ast(d_\ast(\sigma)) = \sigma}かつ${V^\Q \models d_\ast(d^\ast(\tau)) = \tau}
      * ${\dot{x}_0, \ldots, \dot{x}_{n-1} \in V^{\P}}、${\FL}-論理式${\varphi(x_0, \ldots, x_{n-1})}について、
        \eqn-notag(${p \forces_\P \varphi(\dot{x}_0, \ldots, \dot{x}_{n-1}) \iff d(p) \forces_\Q \varphi(d_\ast(\dot{x}_0), \ldots, d_\ast(\dot{x}_{n-1}))});
      * ${\dot{y}_0, \ldots, \dot{y}_{n-1} \in V^{\Q}}、${\FL}-論理式${\varphi(y_0, \ldots, y_{n-1})}について、
        \eqn-notag(${
          q \forces_\Q \varphi(\dot{x}_0, \ldots, \dot{x}_{n-1})
          \iff \forall p \in \P \mhquad \pB{ d(p) \leq q \implies p \forces_\P \varphi(d^\ast(\dot{x}_0), \ldots, d^\ast(\dot{x}_{n-1}))} 
        });
    }
  >);
  +proof<
    +p{
      ${(1)}: 面倒くさいので、${\Q}が完備Boole代数のときだけ示す。
      
    }
    +p{${(2)}: 稠密埋め込みは完備埋め込みであることと\ref(`exc:dense-is-comp`);）から直ちに従う。}
    +p{\emph{TODO: 証明を書く}}
  >
  +exercise<+p{
    一般の擬順序の間の稠密埋め込みについても、上の定理を示せ。
  }>
  +lemma?*?:({Maximal Principle, 擬順序版})<
    +p{${\varphi(x)}を${\FL_\P}-論理式、${\P}を擬順序、${p \in \P}とする。このとき、
    \eqn-notag(${p \forces \exists x \varphi(x) \iff \exists \dot{x} \in V^\P\mhquad \pB{p \forces \varphi(\dot{x})}});
    }
  >
  +proof<+p{完備化を取ったあと完備Boole代数版を適用し、その名称を引き戻してくればよい。}>
  +theorem<
    +p{${\ZF}上次は同値：}
    +enumerate{
      * ${\AC}
      * 擬順序の Maximal Principle
    }
  >
  +proof<
    +p{${(1) \implies (2)}は明らか。${(2) \implies (1)}を示せば十分。}
    +p{
      ${\seq{X_i}{i \in I}}を空でない集合からなる族とする。擬順序${\P}を次で定義する：
        \gather?:(AZMathEquation.notag)(${|
          \P \defeq \set{ \mathbb{1} } \sqcup I
        | p \leq q \defs p = q \vee q = \mathbb{1}
        |});
      つまり、最大元が一つだけあって、その下に${I}の各元が極小元としてぶら下がって極大反鎖を成しているような擬順序である。${\P}-名称${\dot{X}}を次で定める：
        \eqn-notag(${\dot{X} \defeq \Set{ (\check{X}_i, i) }{ i \in I }});
      つまり、${i \forces \dot{X} = \check{X}_i}となるような名称である。各${X_i}は空でないので、このとき次が成り立つ：
        \eqn-notag(${\mathbb{1} \forces \exists x \mhquad \p{x \in \dot{X}}});
      すると、Maximal Principleにより、${\dot{x} \in V^\P}で${\mathbb{1} \forces \dot{x} \in \dot{X}}となるものが取れる。
    }
    +p{
      このとき${i \in I}を任意にとると、${\dot{X}}と${\dot{x}}の取り方より${i \forces \dot{x} \in \check{X}_i}である。
      これは
      \eqn-notag(${
        D \defeq \Set{ q \leq i }{ \exists x \in X_i \mhquad \p{q \forces \check{x} \in \check{X}_i}}
      });
      が${i}以下で稠密であるということである。しかし、今${i}は極小元なので結局${i \in D}となる他なく、従って${x \in X_i}で${i \forces \dot{x} = \check{x}}となるものが取れる。しかも、このような${x}は一意である。なぜなら、ほかにも${i \forces \dot{x} = \check{x}'}となるような${x' \in X_i}が存在したとすると、等号公理から${i \forces \check{x} = \check{x}'}となるが、これは${\Delta_0}-論理式なので${V}で見ても${x = x'}が成り立つからである。そこで、この一意な${x \in X_i}を${x_i}と書くことにする。
    }
    +p{
      以上から、${\dot{x}}から選択関数${\p{x_i}_{i \in I} \in \prod_i X_i}が定義できた。
    }
  >
>
>
